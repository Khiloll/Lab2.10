#!/usr/bin/env python3
# -*- coding: utf-8 -*-

# Напишите функцию, принимающую произвольное количество аргументов,
# и возвращающую требуемое значение. Если функции передается
# пустой список аргументов, то она должна возвращать значение None.
# Номер варианта определяется по согласованию с преподавателем.
# В процессе решения не использовать преобразования конструкции *args
# в список или иную структуру данных.
# Сумму модулей аргументов, расположенных после минимального по модулю аргумента.

def sum_mod_after_min(*args):
    if not args:  # Если список аргументов пуст, вернуть None
        return None

    min_abs_arg = min(args, key=abs)  # Находим минимальный по модулю аргумент
    sum_mod = sum(abs(arg) for arg in args[args.index(min_abs_arg) + 1:])

    return sum_mod

# Примеры использования
print(sum_mod_after_min(3, -5, 2, 4))  # Сумма модулей аргументов после -5: |2| + |4| = 6
print(sum_mod_after_min(-10, 5, -3, 7, 1))  # Сумма модулей аргументов после -3: |7| + |1| = 8
print(sum_mod_after_min())  # Пустой список аргументов, возвращаем None